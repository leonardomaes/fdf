#mlx_init
mlx = mlx_init();
Inicializa a variavel "mlx" que vai representar conexao grafica

#mlx_new_window
mlx_win = mlx_new_window(mlx, 1920, 1080, "NomeDaTela");
Inicializa a janela com tamanho e nome especificado

#mlx_loop
mlx_loop(mlx);
Renderizacao da janela

#mlx_get_data_addr
img.addr = mlx_get_data_addr(img.img, &img.bits_per_pixel, &img.line_length, &img.endian);
typedef struct	s_data {
	void	*img;
	char	*addr;
	int		bits_per_pixel;
	int		line_length;
	int		endian;
}				t_data;

Pegar o address da janela para poder desenhar nela

#offset
int offset = (y * line_length + x * (bits_per_pixel / 8));
Calcular o deslocamento de memoria usando o comprimento da linha definido por mlx_get_data_addr

#mlx_pixel_put
my_mlx_pixel_put(&img, 5, 5, 0x00FF0000);
void	my_mlx_pixel_put(t_data *data, int x, int y, int color)
{
	char	*dst;

	dst = data->addr + (y * data->line_length + x * (data->bits_per_pixel / 8));
	*(unsigned int*)dst = color;
}
Desenhar os pixels especificados pelas coordenadas X e Y na janela, e cor especificada

#mlx_put_image_to_window
mlx_put_image_to_window(mlx, mlx_win, img.img, 0, 0);
Printar a imagem desenhada



